import numpy as np



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
arr = np.arange(0, 11)
print(arr)
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



print()



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# The below line of code will change the values from index zero to one with the value of 100
arr[0:2] = 100
print(arr)
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



print()



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# By default python will do some memory related work while assigning an already declared array to a new array where we actually mean to create a copy of that particular array
# Python by default creates a reference to the array and does not create a copy of that array
# To create a genuine copy of that array, we use the arr.copy() method which is a method that is available on a numpy array
arr_copy = arr.copy()
print(arr_copy)
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



print()



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Below is a clever way of getting a boolean array
bool_arr = arr > 5
print(bool_arr)
# The below line will return only those values for which the bool_arr holds true values
print(arr[bool_arr])
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------



print()



# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
arr_2d = np.arange(50).reshape(5, 10)
print(arr_2d[1:3, 3:5])
print(arr_2d[1][3])
# --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------